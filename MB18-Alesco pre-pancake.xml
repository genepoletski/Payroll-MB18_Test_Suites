<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="b2c33523-3ff8-4df9-b197-50c58f0e2787" created="2.5.0" activeEnvironment="Default environment" name="MB18-(4030)-ALESCO_PRE_PANCAKE-Project" resourceRoot="" updated="2.5.0 2018-09-14T14:45:07Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="3ace40d9-d306-43ac-b95b-a616a1104bf4" name="4030-10-PERSON_AL"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="cc90d9d2-91eb-4667-adb0-85b58bfd6a7c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 1 all rows there with null bank account for RIP emps" searchProperties="true" timeout="0"><con:description>(no rows = pass);</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="2c5e778f-036a-433f-b7ce-502f4b80b72a"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT a.emplid, orig_emplid, surname, first_names, preferred_name,
       date_of_birth, mobile_phone, gender, title, ird_number, hire_date,
       termination_date, termination_reason_desc,
       CASE
          WHEN b.emplid IS NOT NULL
             THEN NULL
          ELSE bank_account
       END AS bank_account, bank_account_name, subtract_overpayment,
       status_latest, status_updated_on, home_phone, other_phone,
       person_notes, include_claimant, emp_reference
  FROM mb18.alesco_person_clean a LEFT OUTER JOIN mb18.emp_rip_paygp_tbl b
       ON a.emplid = b.emplid
MINUS
SELECT emplid, orig_emplid, surname, first_names, preferred_name,
       date_of_birth, mobile_phone, gender, title, ird_number, hire_date,
       termination_date, termination_reason_desc, bank_account,
       bank_account_name, subtract_overpayment, status_latest,
       status_updated_on, home_phone, other_phone, person_notes,
       include_claimant, emp_reference
  FROM mb18.person_al</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="08b775dd-069a-494a-8bd4-06cd3324ea9e"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="644a7418-d728-4e98-b934-31cf5a7cc69e" name="4030-20-TIMESHEETS_AL"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="0297de44-71c5-49ad-bef1-e6c272a08312" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST1 totals match" searchProperties="true" timeout="0"><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="dbe71ed1-594e-461e-bf46-6ab96e37c393"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>with a as
(select emplid,  workdate, paycode, sum (hours) act_hpd_hours from mb18.alesco_actual_hpd_clean group by emplid,  workdate, paycode)
,b as (select emplid,  workdate, work_type paycode, sum (actual_net_hours) actual_ts_al from mb18.TIMESHEETS_AL group by emplid,  workdate, work_type) 
select a.*, b.actual_ts_al
from a,b
where a.emplid=b.emplid(+)  and a.workdate=b.workdate(+) and a.paycode=b.paycode(+)
and act_hpd_hours &lt;> nvl(actual_ts_al,0)</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Database Query 2" id="f1c6c55a-86d1-49e7-9473-f41e2d72e919"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from mb18.alesco_actual_hpd_clean
where emplid='059653' and workdate='28/apr/2011'</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="d8bdd7d6-269d-430e-801f-704c05cb051d"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Database Query 3" id="33a116dc-8f8b-43c6-b519-a50a762b6c2f"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from mb18.TIMESHEETS_AL 
where emplid='059653' and workdate='28/apr/2011'</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="ddfda588-355b-4a70-851b-49ebeae406d4"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="81359cde-4812-42bb-ac3c-d45649b19a64" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST2 rostered hours" searchProperties="true" timeout="0"><con:description>source=ALESCO_ROSTERED_HPD_CLEAN</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="48cbc2ac-344f-4cc7-a7ce-9cc4e6d550dc"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select a.*, b.HOURS_PER_DAY from
 
 (select emplid, workdate, ROSTERED_NET_HOURS from mb18.timesheets_al)a

,(select emplid, workdate, casual_roster_yn, sum(HOURS_PER_DAY) HOURS_PER_DAY from mb18.ALESCO_ROSTERED_HPD_CLEAN group by emplid, workdate,casual_roster_yn) b

,(select emplid, workdate, min (casual_roster_yn) casual_roster_yn from
(select emplid,  workdate, casual_roster_yn, count(*) from mb18.ALESCO_ROSTERED_HPD_CLEAN a group by emplid, casual_roster_yn, workdate)
group by emplid, workdate) c

where a.emplid=b.emplid and a.workdate=b.workdate and a.ROSTERED_NET_HOURS &lt;> b.HOURS_PER_DAY

and b.emplid=c.emplid and b.workdate=c.workdate and b.casual_roster_yn=c.casual_roster_yn</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e646a61b-7a26-4e3a-bcb3-51dc7774f0fc" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST3 PPM only" searchProperties="true" timeout="0"><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="f47b9534-5a67-4295-88d4-0369ee78959a"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>with
a as (select emplid,expected_pay_end_date, expected_pay_end_date-6 workdate, ppm_days_paid from mb18.alesco_actual_hpd_clean where job_no='PP') 
,b as (select emplid, workdate, days_paid from mb18.timesheets_al where rdp_source='ALESCO_PPM_DAYS_PAID_CLEAN')
,c as (select emplid, min (effdt_start) min_start from mb18.employment_history_pre_stg group by emplid) 
select a.*,b.*, c.*, min_start-expected_pay_end_date from a,b,c
where
a.emplid=c.emplid 
and a.emplid=b.emplid(+) and a.workdate=b.workdate(+) 
and a.ppm_days_paid&lt;> nvl (b.days_paid,0)
and min_start-expected_pay_end_date&lt;7 and  min_start-expected_pay_end_date>0</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Database Query 2" id="b60a9576-bebc-400e-ac38-86c89664bab6"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>with 
a as (select emplid, workdate, days_paid from mb18.timesheets_al where rdp_source='ALESCO_PPM_DAYS_PAID_CLEAN') 
,b as (select emplid, workdate, expected_pay_end_date, ppm_days_paid from mb18.alesco_actual_hpd_clean where job_no='PP') 
,c as (select emplid, min (effdt_start) min_start from mb18.employment_history_pre_stg group by emplid)
select a.*,b.*, c.*,c.min_start-a.workdate from a,b,c
where a.emplid=b.emplid(+) and a.workdate=b.workdate(+) and a.days_paid&lt;> nvl (b.ppm_days_paid,0)
and a.emplid=c.emplid 
and min_start&lt;>a.workdate
and c.min_start-a.workdate&lt;7
and c.min_start-a.workdate>0</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="729c8fb4-2866-46ca-9e0e-0b305d0e4046" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 4 sum_hours_day is right" searchProperties="true" timeout="0"><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="856c27b1-9435-462d-80da-ec5d8e907a06"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select a.*, b.sum_hours_day_actual
from
(select emplid, workdate, sum (actual_net_hours) sum_hours_day_expected from mb18.timesheets_al group by emplid, workdate) a
,(select emplid, workdate, sum_hours_day sum_hours_day_actual from mb18.timesheets_al) b
where a.emplid=b.emplid(+) and a.workdate=b.workdate(+) and sum_hours_day_expected&lt;> nvl(sum_hours_day_actual,0) </con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c57227c9-cbd2-4d09-8a75-98c318e4cdba" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Test 5 day_paid formula" searchProperties="true" timeout="0"><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="d4b54200-a010-4c36-98d5-0049ef3a71db"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query><![CDATA[with
a as (select a.emplid, workdate, days_paid,sum_hours_day,  a.rostered_net_hours, a.work_type
,case 
    when abs(sum_hours_day) <2 and rostered_net_hours>0 then -- A 
        case 
            when sum_hours_day=0 then 0     -- A1 
            when abs(sum_hours_day) >0 and abs(sum_hours_day)<1 then 0 -- A2 
            when abs(sum_hours_day) >=1 and abs(sum_hours_day)<2 and rostered_net_hours >=1 then 1 -- A3 
            when abs(sum_hours_day) > =1 and abs(sum_hours_day) < 2 and rostered_net_hours <1 then 0-- A4 
             
        end
    when abs(sum_hours_day) <2  and rostered_net_hours=0 then -- B 
        case 
            when sum_hours_day =0 then 0 -- B1 
            when sum_hours_day> 0 and sum_hours_day <1 then 0 -- B2 
            when sum_hours_day> 1 and sum_hours_day <2 then 0 -- B3 
        end
    when  abs(sum_hours_day)>=2  and rostered_net_hours>0 then -- C 
        case
            when abs(sum_hours_day)>=2 and abs(sum_hours_day)<=12 then 1 -- C1 
            when abs(sum_hours_day)>=2 then 999 --  C2 Days Paid Formula 
        end
    when  abs(sum_hours_day)>=2 and rostered_net_hours=0 then 999 -- D1 Days Paid Formula  
    
    else 777 -- should not have any here, if all circumstances covered above, check this! 
end non_dp_formula_expected
from mb18.timesheets_al a
--from mb18.temp_mc a
where rdp_source<>'ALESCO_PPM_DAYS_PAID_CLEAN' 
--and a.emplid='0809317' and a.workdate between '20-dec-2011' and '7-jan-2012'

)

,x as (select a.emplid, a.workdate, 
a.actual_hpd_hours, b.roster_tot_hours, a.casual_roster_yn,--, b.avg_daily_hours, 
round(actual_hpd_hours/b.roster_tot_hours,0) dpformula_expected_raw
from 
 (select emplid, workdate, min(casual_roster_yn) casual_roster_yn, sum (nvl(hours,0)) actual_hpd_hours from mb18.alesco_actual_hpd_clean where ppm_days_paid is null
--     and emplid='0830994' and workdate='1/aug/2013'
 group by emplid, workdate
  ) a
 
,(select emplid, workdate,  sum (avg_daily_hours) roster_tot_hours 
from mb18.alesco_rostered_hpd_clean where 
     casual_roster_yn='N' 
--and emplid='0809317' and workdate between '20-dec-2011' and '7-jan-2012'
group by emplid, workdate
) b
where 1=1 and a.emplid=b.emplid  and a.workdate=b.workdate

)


select a.emplid, a.workdate, a.work_type, a.rostered_net_hours,  a.sum_hours_day, x.casual_roster_yn
,x.dpformula_expected_raw ,a.non_dp_formula_expected

,case when non_dp_formula_expected = 999 then x.dpformula_expected_raw else a.non_dp_formula_expected end expected_days_paid

,roster_tot_hours
,a.days_paid

 from 
 a,
 x


where a.emplid=x.emplid(+) and a.workdate=x.workdate(+)

and case when non_dp_formula_expected = 999 then round(x.dpformula_expected_raw,0) else a.non_dp_formula_expected end <> nvl(days_paid,9999)]]></con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="bfbd327c-ae86-470b-b59f-8ddd22a5c027" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST6 days paid nulls" searchProperties="true" timeout="0"><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="8da222a4-db18-4245-9ccd-6fa1ce7c664a"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from mb18.timesheets_al where days_paid is null</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="0c383228-a648-41fa-8d97-dc1589d4b733" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 7 timesheets are within an occupancy" searchProperties="true" timeout="0"><con:description> (tidy up PPM dates for first pay begin before hire dt)</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="7b3cf580-56b8-4b91-b1b5-725fd964c691"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select  a.emplid, a.workdate, a.work_type,b.first_emp_hist, b.first_emp_hist-a.workdate
from mb18.timesheets_al a,
(select  emplid, min (effdt_start) first_emp_hist from mb18.alesco_occupancy_clean group by emplid) b  where 
a.emplid=b.emplid
and a.workdate>='01-apr-2004'

and workdate&lt; first_emp_hist
and b.first_emp_hist-a.workdate&lt;=7</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e01579ae-e938-40d8-a1ab-724351b26667" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 8 ms_cea" searchProperties="true" timeout="0"><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="4c827737-5a35-4fa6-a486-67e8a8eb3671"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select a.emplid, b.classification,  a.ms_cea ms_cea_from_ts, c.grade, c.ms_cea  ms_cea_from_mappings  
from mb18.TIMESHEETS_AL a, mb18.alesco_occupancy_clean b, mb18.hr_fte_grade_mappings c
where a.emplid=b.emplid  and a.workdate between effdt_start and effdt_end and b.classification=C.grade
and a.ms_cea&lt;>c.ms_cea</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="0cfb1106-c256-4b89-9cd6-9e5a92bc6933" name="4030-30-PAYSLIPS_AL"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="6f3b68f6-7567-40cf-9c4b-e8346fc09811" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="TEST 1 - Primary Key" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description> No rows = Pass for first test case</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Primary Keys" id="b727cfc0-9b99-4e61-a418-01bc5561f725"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT
emplid,job_no,company,paygroup,period_end_date,paycode,start_date,end_date,abs_pay_link,date_attributed,rdp_source,count(*)
FROM
mb18.payslips_al
GROUP BY emplid,job_no,company,paygroup,period_end_date,paycode,start_date,end_date,abs_pay_link,date_attributed, rdp_source
HAVING count(*) > 1</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="1a totals per keys match" id="5c3534e2-5011-4ee6-91c5-f4dd06272b80"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>with 
a as (
SELECT emplid,job_no,company,paygroup,period_end_date,x.paycode,sum(duration_hours) units_source, 
sum (case 
when y.pays_alongside in ('D','P') then amt
when y.pays_alongside not in ('D','P') then  case when amt_paid is null then amt else amt_paid end end     
) amt_source

from mb18.alesco_payslips_absences_clean x, mb18.paycodes_tbl y
where 1=1 
and x.paycode=y.paycode and y.source='ALESCO'
group by emplid,job_no,company,paygroup,period_end_date,x.paycode
)
,b as (
SELECT emplid,job_no,company,paygroup,period_end_date,paycode,sum(total_units) units_dest, sum (totaldollars) amt_dest
from mb18.payslips_al
--where emplid='0831371'
group by emplid,job_no,company,paygroup,period_end_date,paycode
)

select a.*, b.units_dest, b.amt_dest
from a,b
WHERE
a.emplid = b.emplid (+)
AND a.job_no = b.job_no (+)
AND a.company = b.company (+)
AND a.paygroup = b.paygroup (+)
AND a.period_end_date = b.period_end_date (+)
AND a.paycode = b.paycode (+)
and (round(abs(units_source-nvl(units_dest,0)),2)>0.1 or round(abs(amt_source-nvl(amt_dest,0)),2)>0.02)</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="1b RTADJ paycode per empid and job_no should total zero" id="01bf03f5-540f-4ee5-9f41-bcafb0ac6082"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>with 
a as (
SELECT emplid,job_no,company,paygroup,period_end_date,x.paycode,sum(duration_hours) units_source, 
sum (case 
when y.pays_alongside in ('D','P') then amt
when y.pays_alongside not in ('D','P') then  case when amt_paid is null then amt else amt_paid end end     
) amt_source

from mb18.alesco_payslips_absences_clean x, mb18.paycodes_tbl y
where 1=1 
and x.paycode=y.paycode and y.source='ALESCO'
group by emplid,job_no,company,paygroup,period_end_date,x.paycode
)
,b as (
SELECT emplid,job_no,company,paygroup,period_end_date,paycode,sum(total_units) units_dest, sum (totaldollars) amt_dest
from mb18.payslips_al
--where emplid='0831371'
group by emplid,job_no,company,paygroup,period_end_date,paycode
)

select a.*, b.units_dest, b.amt_dest
from a,b
WHERE
a.emplid = b.emplid (+)
AND a.job_no = b.job_no (+)
AND a.company = b.company (+)
AND a.paygroup = b.paygroup (+)
AND a.period_end_date = b.period_end_date (+)
AND a.paycode = b.paycode (+)
and (round(abs(units_source-nvl(units_dest,0)),2)>0.1 or round(abs(amt_source-nvl(amt_dest,0)),2)>0.02)</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c1bc91ae-a9fb-4126-9cdb-273671ef037c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 2 - PayCodes in PAYCODES_TBL" searchProperties="true" timeout="0"><con:description>zero rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="5d77a6f8-c1de-49e3-8e1c-00805d316a3c"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT * FROM mb18.payslips_al WHERE paycode NOT IN (SELECT distinct paycode FROM mb18.paycodes_tbl where source='ALESCO')</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="cb5c857d-f17e-4ce7-b517-20cdaf3524df" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 3 - Period Start Date always before Period End Date" searchProperties="true" timeout="0"><con:description>zero rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="5561b566-c1e9-4c3e-a4ec-4d8f81f66526"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT *FROM mb18.payslips_al WHERE period_start_date > period_end_date</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e8ba4d4a-939b-4a73-8b60-501b40273b9f" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 4-Date_Attributed calculation: Pays Alongside without Date_Attributed" searchProperties="true" timeout="0"><con:description>(no rows = pass);</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="ec68fdeb-ae77-499d-bcb8-76bf2f2c681f"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT * FROM
mb18.payslips_al
WHERE
paycode IN (SELECT paycode FROM mb18.paycodes_tbl WHERE source = 'ALESCO' and pays_alongside IN ('P','D'))
AND rdp_source IN ('PAYS_ALONGSIDE TYPE D','PAYS_ALONGSIDE TYPE D MATCHED LIKE P','PAYS_ALONGSIDE TYPE P')
AND date_attributed IS NULL</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="39ad5134-bae0-479d-8b1b-36d7911ba6fd" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 5 - Date_Attributed calculation" searchProperties="true" timeout="0"><con:description>No Pays Alongside with Date_Attributed; zero rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="50331124-0d06-499b-8046-53b0068d2b26"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT *
FROM
mb18.payslips_al
WHERE
paycode NOT IN (SELECT paycode FROM mb18.paycodes_tbl WHERE source = 'ALESCO' and pays_alongside IN ('P','D'))
AND date_attributed IS NOT NULL</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="0c2a2113-c09d-4f7c-8ce0-807aabe97dde" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 6 - RDP_SOURCE Calculation" searchProperties="true" timeout="0"><con:description>no rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="f5caecef-61bc-4637-af3f-45f9b0e3b77c"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT * FROM mb18.payslips_al WHERE rdp_source IN ('PAYS_ALONGSIDE TYPE D','PAYS_ALONGSIDE TYPE D MATCHED LIKE P') AND paycode NOT IN (SELECT distinct paycode FROM mb18.paycodes_tbl WHERE source = 'ALESCO' AND pays_alongside = 'D')
UNION ALL
SELECT * FROM mb18.payslips_al WHERE rdp_source IN ('PAYS_ALONGSIDE TYPE P NON-CASUAL','PAYS_ALONGSIDE TYPE P CASUAL NORMAL','PAYS_ALONGSIDE TYPE P CASUAL RETRO') AND paycode NOT IN (SELECT distinct paycode FROM mb18.paycodes_tbl WHERE source = 'ALESCO' AND pays_alongside = 'P')
UNION ALL
SELECT * FROM mb18.payslips_al WHERE rdp_source = 'UNMATCHED TYPE D OR P - SPLIT 5 OR 10' AND paycode IN (SELECT distinct paycode FROM mb18.paycodes_tbl WHERE source = 'ALESCO' AND pays_alongside = 'N')
UNION ALL
SELECT * FROM mb18.payslips_al WHERE rdp_source = 'PAYS_ALONGSIDE NOT TYPE D OR P' AND paycode NOT IN (SELECT distinct paycode FROM mb18.paycodes_tbl WHERE source = 'ALESCO' AND pays_alongside = 'N') AND abs(total_units) > 0.08 AND abs(totaldollars) > 0.08
UNION ALL
SELECT * FROM mb18.payslips_al WHERE rdp_source IN ('UNMATCHED TYPE D OR P - SPLIT 5 OR 10','PAYS_ALONGSIDE NOT TYPE D OR P') AND date_attributed IS NOT NULL</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="7efd9266-7420-4292-99b3-2551aad185f5" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 9c Paysalongside D" searchProperties="true" timeout="0"><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="eb701867-3aaa-4d2e-8262-14c8cce156a5"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>with 
a  as
(select 
emplid, job_no,  a.paycode, period_end_Date , end_date source_date_attributed, AMT_PAID, amt 
, sum(round(nvl(AMT_PAID,AMT),2)) source_amt
from  mb18.alesco_payslips_absences_clean a, mb18.paycodes_tbl b 
where a.paycode=b.paycode and b.pays_alongside='D' --and retro_ind='N'
and abs(amt)>0.08
group by
emplid, job_no,  a.paycode, end_date , AMT_PAID, amt,period_end_Date
)
,b as (
select 
emplid, job_no,  period_end_Date, paycode, date_attributed dest_date_attributed, round(sum(totaldollars),2) dest_amt
 from mb18.payslips_al where 1=1 
-- and emplid= '0819615' and job_no='01'  and period_end_Date= '30/mar/2013' and paycode='MBT10' and date_attributed='27/mar/2013'
and end_date between period_start_date and period_end_Date
group by emplid, job_no,  date_attributed,paycode, period_end_Date)

select a.*, b.dest_amt
from a,b
where a.emplid=b.emplid(+) and  a.job_no=b.job_no(+) and a.paycode=b.paycode(+) and a.period_end_Date=b.period_end_Date and a.source_date_attributed=dest_date_attributed(+)
and abs(nvl(source_amt,0)-nvl(dest_amt,0))>0.08</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="c75f5fe5-20f4-4228-8e99-263f9b4700a7" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="TEST 9e Payslaongside P non-casual" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="ee0de74f-8b33-47a0-928e-99360fa1fe62"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>with 
a  as
(select 
a2.emplid, a2.job_no,  a2.paycode--, expected_ppe
,c2.workdate date_attributed, c2.hours_per_day, c2.hours_per_week
,round(sum(a2.amt2 * (c2.hours_per_day_tot/ c2.hours_per_week)),2) expected_amt 
from  
 (
 select a3.emplid, a3.job_no, a3.paycode, case when  a3.end_date between a3.period_start_Date and a3.period_end_Date then a3.period_end_Date else end_date end expected_ppe,
    sum(nvl(a3.AMT_PAID,a3.AMT)) amt2
    --, sum (nvl(a3.AMT_PAID,a3.AMT)) over (partition by a3.emplid, a3.job_no, a3.paycode, a3.period_end_Date) amt2 
    from mb18.alesco_payslips_absences_clean a3 ,mb18.alesco_occupancy_clean aco
    where  abs(amt)>0.03 
    and aco.casual_ind='N'
    --and  a3.emplid='0831727' and a3.paycode='WETAL' --and case when  a3.end_date between a3.period_start_Date and a3.period_end_Date then a3.period_end_Date else end_date end='20/jan/2014'
        and a3.emplid=aco.emplid and a3.job_no=aco.job_no and a3.end_Date between aco.effdt_start and aco.extended_effdt_end    
    group by a3.emplid, a3.job_no, a3.paycode, case when  a3.end_date between a3.period_start_Date and a3.period_end_Date then a3.period_end_Date else end_date end
  
    ) a2
,(select * from  mb18.paycodes_tbl where pays_alongside='P' and source='ALESCO') b2 
    
    ,(select emplid, job_no, expected_pay_end_Date,  workdate,  hours_per_day 
    ,sum(hours_per_day) over (partition by emplid, job_no,  expected_pay_end_Date) hours_per_week
    ,sum(hours_per_day) over (partition by emplid, job_no,  workdate) hours_per_day_tot 
    from 
    mb18.ALESCO_rostered_hpd_clean where hours_per_day&lt;>0 and casual_roster_yn='N'
    ) c2

where a2.paycode=b2.paycode  
and a2.emplid=c2.emplid(+) and a2.job_no=c2.job_no(+)  and a2.expected_ppe=c2.EXPECTED_PAY_END_DATE(+)

and c2.hours_per_week&lt;>0
group by
a2.emplid, a2.job_no,  a2.paycode, a2.expected_ppe,c2.workdate , c2.hours_per_day, c2.hours_per_week
)
,b as
(select p2.emplid, p2.job_no,  p2.paycode, p2.date_attributed , round(sum (p2.totaldollars),2) dest_amt
from mb18.payslips_al p2, mb18.paycodes_tbl q2 
where q2.pays_alongside='P' and q2.source='ALESCO' and p2.paycode=q2.paycode
--and p2.emplid= '0831727'  and p2.paycode='WETAL' and p2.date_attributed='25/jan/2014'
group by  p2.emplid, p2.job_no,  p2.paycode,  p2.date_attributed
)

select a.*, b.dest_amt
from a,b
where a.emplid=b.emplid(+) and  a.job_no=b.job_no(+) and a.paycode=b.paycode(+) and a.date_attributed=b.date_attributed(+) 
and abs(a.expected_amt-nvl(dest_amt,0))>0.20</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Database Query 2" id="a935c6c6-72b0-4f2b-91a4-8e11c569acab"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from  mb18.rdp_ods_alesco.pehistpay_raw where employee#= '0831727'  and paycode='GOLDH'</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Database Query 3" id="13b4fd63-afec-46f8-b7ca-7db3ba2b0a0a"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from  mb18.alesco_payslips_clean where emplid= '0831727'  and paycode='GOLDH' 
and case when  end_date between period_start_Date and period_end_Date then period_end_Date else end_date end ='25/jan/2014'</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Database Query 4" id="4325c01d-699b-4be3-b4a0-8c7eb4f8ce5c"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from  mb18.alesco_payslips_absences_clean where emplid= '0831727'  and paycode='WETAL' and period_end_Date='25/jan/2014'</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Database Query 5" id="d01c2858-0c04-4d28-b315-6ade66e23793"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from  mb18.payslips_al a where emplid= '0831727'  and paycode='WETAL' and date_attributed='25/jan/2014'</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="366ce76e-c4ec-400b-97e3-9c6eb09c650d" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="TEST 9h Payslaongside P casual retro" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="e459113b-4788-400a-96de-bf746e5505db"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>with 
a  as
(select 
a2.emplid, a2.job_no,  a2.paycode, a2.period_end_Date, a2.end_date,c2.workdate date_attributed, c2.hours_per_day, c2.hours_per_week
,round(sum(a2.amt2 * (c2.hours_per_day_tot/ c2.hours_per_week)),2) expected_amt
from  
 (select a3.*, nvl(a3.AMT_PAID,a3.AMT) amt2_old, sum (nvl(a3.AMT_PAID,a3.AMT)) over (partition by emplid, job_no, paycode, period_end_Date) amt2 
    from mb18.alesco_payslips_absences_clean a3 where  abs(amt)>0.03 and retro_ind='N'
    --and  emplid='0822213' and (period_end_Date='22/sep/2012'  or end_date= '22/sep/2012' )
   -- and paycode='LAUND'
  
    ) a2
,(select * from  mb18.paycodes_tbl where pays_alongside='P' and source='ALESCO') b2 
    ,(select emplid, job_no, expected_pay_end_Date,  workdate,  hours hours_per_day
    ,sum(hours) over (partition by emplid, job_no,  expected_pay_end_Date) hours_per_week
    ,sum(hours) over (partition by emplid, job_no,  workdate) hours_per_day_tot from mb18.ALESCO_PEPAYTRAN_CASUAL_CLEAN where hours&lt;>0
    --and  emplid='114104' and expected_pay_end_Date='19/may/2012' 
    ) c2
    
,(select * from mb18.alesco_occupancy_clean where casual_ind='Y' ) d2
where a2.paycode=b2.paycode  
and a2.emplid=c2.emplid(+) and a2.job_no=c2.job_no(+)  and a2.start_date=c2.EXPECTED_PAY_END_DATE(+)



and a2.emplid=d2.emplid and a2.job_no=d2.job_no and a2.end_Date between d2.effdt_start and d2.extended_effdt_end
and c2.hours_per_week&lt;>0
--and a2.emplid='114104' 
group by
a2.emplid, a2.job_no,  a2.paycode, a2.period_end_Date,c2.workdate , c2.hours_per_day, c2.hours_per_week,a2.end_date
)
,b as
(select p2.emplid, p2.job_no,  p2.paycode, p2.period_end_Date, p2.date_attributed , round(sum (p2.totaldollars),2) dest_amt
from mb18.payslips_al p2, mb18.paycodes_tbl q2 where q2.pays_alongside='P' and q2.source='ALESCO' and p2.paycode=q2.paycode
--and emplid= '0822213'  and p2.paycode='LAUND' and period_end_Date='22/sep/2012' 
and end_date between period_start_date and period_end_Date
group by  p2.emplid, p2.job_no,  p2.paycode, p2.period_end_Date, p2.date_attributed
)

select a.*, b.dest_amt
from a,b
where a.emplid=b.emplid(+) and  a.job_no=b.job_no(+) and a.paycode=b.paycode(+) and a.period_end_Date=b.period_end_Date(+) and a.date_attributed=b.date_attributed(+)
and abs(a.expected_amt-nvl(dest_amt,0))>0.08</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Database Query 2" id="afaa6eae-b13b-450a-b4fe-0aed81985b03"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from  mb18.alesco_payslips_absences_clean where emplid= '0822213'  and paycode='LAUND' and period_end_Date='22/sep/2012'</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Database Query 3" id="c9ca598b-9f79-4da5-8315-b1e88460b3ab"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from  mb18.payslips_al a where emplid= '0822213'  and paycode='LAUND' and period_end_Date='22/sep/2012'</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="693bc15d-9a47-4301-bf6b-e68aac9bcd29" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST A basic RDP source test" searchProperties="true" timeout="0"><con:description> No rows = Pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="09af54eb-1860-4129-be7c-e7dd92273b20"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select a.pays_alongside, b.rdp_source, count(*)  from mb18.paycodes_tbl a
,(select * from mb18.payslips_al where abs(totaldollars)>0.08) b
where a.paycode=b.paycode and a.source='ALESCO'
and
case 
when a.pays_alongside='P' and b.rdp_source in ('PAYS_ALONGSIDE TYPE P NON-CASUAL','PAYS_ALONGSIDE TYPE P CASUAL','UNMATCHED TYPE D OR P - SPLIT 5 OR 10') then 'ok'
when a.pays_alongside='D' and b.rdp_source in ('PAYS_ALONGSIDE TYPE D NON-RETRO','PAYS_ALONGSIDE TYPE D MATCHED LIKE P','PAYS_ALONGSIDE TYPE D RETRO','UNMATCHED TYPE D OR P - SPLIT 5 OR 10') then 'ok'
when a.pays_alongside='N' and b.rdp_source in ('NOT PAYS_ALONGSIDE') then 'ok'
else 'maybe not ok' end
&lt;>'ok'
group by a.pays_alongside, b.rdp_source</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ad2b4890-f54b-4475-9fc8-d1c9f966b471" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST B casual and non-casual" searchProperties="true" timeout="0"><con:description> No rows = Pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="444eab8a-8faf-41eb-a951-12f0f9c1f660"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select a.pays_alongside, b.rdp_source, count(*)  from mb18.paycodes_tbl a
,(select * from mb18.payslips_al where abs(totaldollars)>0.08) b
where a.paycode=b.paycode and a.source='ALESCO'
and
case 
when a.pays_alongside='P' and b.rdp_source in ('PAYS_ALONGSIDE TYPE P NON-CASUAL','PAYS_ALONGSIDE TYPE P CASUAL','UNMATCHED TYPE D OR P - SPLIT 5 OR 10') then 'ok'
when a.pays_alongside='D' and b.rdp_source in ('PAYS_ALONGSIDE TYPE D NON-RETRO','PAYS_ALONGSIDE TYPE D MATCHED LIKE P','PAYS_ALONGSIDE TYPE D RETRO','UNMATCHED TYPE D OR P - SPLIT 5 OR 10') then 'ok'
when a.pays_alongside='N' and b.rdp_source in ('NOT PAYS_ALONGSIDE') then 'ok'
else 'maybe not ok' end
&lt;>'ok'
group by a.pays_alongside, b.rdp_source</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9c699903-255e-4ea0-8cff-8f9a35bdcec8" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST C retro and non-retro" searchProperties="true" timeout="0"><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="8bdd30b9-5e5c-4356-af19-d6df2c6d3349"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select a.pays_alongside, b.rdp_source, count(*)  from mb18.paycodes_tbl a
,(select * from mb18.payslips_al where abs(totaldollars)>0.08) b
where a.paycode=b.paycode and a.source='ALESCO'
and
case 
when a.pays_alongside='P' and b.rdp_source in ('PAYS_ALONGSIDE TYPE P NON-CASUAL','PAYS_ALONGSIDE TYPE P CASUAL','UNMATCHED TYPE D OR P - SPLIT 5 OR 10') then 'ok'
when a.pays_alongside='D' and b.rdp_source in ('PAYS_ALONGSIDE TYPE D NON-RETRO','PAYS_ALONGSIDE TYPE D MATCHED LIKE P','PAYS_ALONGSIDE TYPE D RETRO','UNMATCHED TYPE D OR P - SPLIT 5 OR 10') then 'ok'
when a.pays_alongside='N' and b.rdp_source in ('NOT PAYS_ALONGSIDE') then 'ok'
else 'maybe not ok' end
&lt;>'ok'
group by a.pays_alongside, b.rdp_source</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="97cfd0c6-7ea3-4e2a-b4f9-c065b08f7247" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST D - those that fail the D test" searchProperties="true" timeout="0"><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="a07b4d59-11e1-49fb-8b07-b185f444a678"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from 
(select * from mb18.payslips_al where rdp_source in('PAYS_ALONGSIDE TYPE D MATCHED LIKE P')) a
,(select emplid, job_no, paycode, expected_pay_end_Date, sum (unit) from mb18.ALESCO_PEPAYTRAN_HOURLY_CLEAN group by emplid, job_no, paycode, expected_pay_end_Date having sum(unit)&lt;>0
) d
where a.emplid=d.emplid and a.job_no=d.job_no and a.paycode=d.paycode and 
case when date_attributed between a.period_start_date and a.period_end_Date then period_end_date else end_date end =d.EXPECTED_PAY_END_DATE
and abs(totaldollars)>0.08</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="f44fbc92-72ea-45e7-a544-c81b23d17166" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST E1 - 5/10 that fail the D test" searchProperties="true" timeout="0"><con:description>no row = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="aec09297-b77a-44d6-a069-ea42512b223a"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from 
(select x.* from mb18.payslips_al x, mb18.paycodes_tbl y where x.paycode=y.paycode and y.source='ALESCO' and pays_alongside='D' and rdp_source in('UNMATCHED TYPE D OR P - SPLIT 5 OR 10')) a
,(select emplid, job_no, paycode, expected_pay_end_Date, sum (unit) from mb18.ALESCO_PEPAYTRAN_HOURLY_CLEAN group by emplid, job_no, paycode, expected_pay_end_Date having sum(unit)&lt;>0
) d
where a.emplid=d.emplid and a.job_no=d.job_no and a.paycode=d.paycode and 
case when date_attributed between a.period_start_date and a.period_end_Date then period_end_date else end_date end =d.EXPECTED_PAY_END_DATE
and abs(totaldollars)>0.08</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="789ed70a-7e75-4f83-afe9-a0c1cf938461" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST E2 - 5/10 that fail the P test, non-casuals" searchProperties="true" timeout="0"><con:description>no rows =pass, rows here suggest paysalongside cutups shoul;d be done against roster not 5/10;</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="4cb9c15b-d861-4fb6-ba92-9764d32d88cb"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from
 
(select x.emplid, x.job_no, x.paycode,  case when x.date_attributed between x.period_start_date and x.period_end_Date then x.period_end_date else x.end_date end expected_ppe
,sum (totaldollars) totaldollars
from mb18.payslips_al x, mb18.paycodes_tbl y, mb18.alesco_occupancy_clean z
where x.paycode=y.paycode and y.source='ALESCO' and pays_alongside='P' and x.rdp_source in('UNMATCHED TYPE D OR P - SPLIT 5 OR 10')
and x.emplid=z.emplid and x.job_no=z.job_no and x.end_date between z.effdt_start and z.extended_effdt_end and z.casual_ind='N'
group by x.emplid, x.job_no, x.paycode,  case when x.date_attributed between x.period_start_date and x.period_end_Date then period_end_date else end_date end
having sum (totaldollars)&lt;>0
) a

,(select * from mb18.ALESCO_ROSTERED_HPD_CLEAN where CASUAL_ROSTER_YN = 'N' and hours_per_day&lt;>0) d

where a.emplid=d.emplid and a.job_no=d.job_no and expected_ppe =d.EXPECTED_PAY_END_DATE
and abs(totaldollars)>0.08</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="6589f294-537e-41c9-9fef-826a38ee81ec" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST E3 - 5/10 that fail the P test, casuals." searchProperties="true" timeout="0"><con:description>no rows =pass, where rows here then suggests paysalong side should be cutup as per paytran data, not a 5/10 split</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="bb6c6935-e30a-4160-b9f9-ea69ff88f5d7"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from
(select x.emplid, x.job_no, x.paycode,  case when x.date_attributed between x.period_start_date and x.period_end_Date then x.period_end_date else x.end_date end expected_ppe
,sum (totaldollars) totaldollars
from mb18.payslips_al x, mb18.paycodes_tbl y, mb18.alesco_occupancy_clean z
where x.paycode=y.paycode and y.source='ALESCO' and pays_alongside='P' and x.rdp_source in('UNMATCHED TYPE D OR P - SPLIT 5 OR 10')
and x.emplid=z.emplid and x.job_no=z.job_no and x.end_date between z.effdt_start and z.extended_effdt_end and z.casual_ind='Y'
group by x.emplid, x.job_no, x.paycode,  case when x.date_attributed between x.period_start_date and x.period_end_Date then period_end_date else end_date end
having sum (totaldollars)&lt;>0
) a
,(select emplid, job_no, expected_pay_end_Date, sum (hours) from mb18.ALESCO_PEPAYTRAN_CASUAL_CLEAN group by emplid, job_no, expected_pay_end_Date having sum(hours)&lt;>0 ) d
where a.emplid=d.emplid and a.job_no=d.job_no and a.expected_ppe =d.EXPECTED_PAY_END_DATE
and abs(totaldollars)>0.08</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="21a5fc21-725b-4bb7-a6f9-26672cb88e10" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST F these are to be split manually on pay en date into 5/10 days" searchProperties="true" timeout="0"><con:description>code ran too slow, test will fail, list for FixMe</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="12a497f5-7558-492d-bc18-79266d474b29"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select * from mb18.payslips_al where rdp_source='UNMATCHED TYPE D OR P - SPLIT 5 OR 10' and date_attributed is not null</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="8edf7ea2-9804-4c02-bca8-35e9390f8c8e" name="4030-40-EMP_ABSENCES_AL.sql"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="2d01494b-a49e-46ae-bcdb-167357954d94" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="TEST 1 - Primary Key" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>TEST1 - Primary Key</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Primary Keys" id="5354ce06-4b3f-4a91-adb7-c3a1ea804350"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT 
emplid,job_no,company,paygroup,absence_code,start_date,abs_pay_link,count(*)
FROM
mb18.emp_absences_al
GROUP BY emplid,job_no,company,paygroup,absence_code,start_date,abs_pay_link
HAVING count(*) > 1</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="3acc9224-3d69-4548-9e22-85542e28c77c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 2a - Same absences in ALESCO_PAYSLIPS_ABSENCES_CLEAN and EMP_ABSENCES_AL" searchProperties="true" timeout="0"><con:description>No rows = Pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="f9c17ecb-9da3-4795-b6af-b1e5779488b9"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT count(*)
FROM
(
SELECT distinct abs_pay_link FROM mb18.emp_absences_al
MINUS
SELECT distinct abs_pay_link FROM mb18.alesco_payslips_absences_clean WHERE abs_pay_link IS NOT NULL and LINK_RULE not in ('R20_N','R30_N','R40_N','R50_N','R55_N') and LV_CODE &lt;> 'SPCPD'
)</con:query><con:assertion type="XPath Match" id="a272e8a6-22d5-4bc9-985b-c82fd2d9ac0e" name="Count of rows = 0"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="Database Query 2" id="20d84483-981d-4f87-a0c4-ecebc6cdd742"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT count(*)
FROM
(
SELECT distinct abs_pay_link FROM mb18.alesco_payslips_absences_clean WHERE abs_pay_link IS NOT NULL and LINK_RULE not in ('R20_N','R30_N','R40_N','R50_N','R55_N') and LV_CODE &lt;> 'SPCPD'
MINUS
SELECT distinct abs_pay_link FROM mb18.emp_absences_al
)</con:query><con:assertion type="XPath Match" name="Count of rows = 0" id="daf11d7f-6d1d-43ca-9f97-d2438641e52b"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="bb372ed2-383c-44ae-8725-168a17631134" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 3 - Absence Codes in ABSENCES_TBL" searchProperties="true" timeout="0"><con:description>zero rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="a5f10b03-c2a1-428b-83de-92915808e287"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT count(*) FROM mb18.emp_absences_al WHERE absence_code NOT IN (SELECT distinct absence_code FROM mb18.absences_tbl)</con:query><con:assertion type="XPath Match" name="Count of rows = 0" id="e0f2eb7d-f21e-4114-9d0b-98f1c1c453e9"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="a3b0b42c-2a90-4cf7-9c38-974986210ab6" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 4-Date_Attributed calculation" searchProperties="true" timeout="0"><con:description> Pays Alongside without Date_Attributed, (no rows = pass);</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="ff068891-2615-4646-ad8b-aa5b4c804b09"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT count(*) FROM mb18.emp_absences_al WHERE absence_id IS NULL
UNION ALL
SELECT
count(*)
FROM
mb18.emp_absences_al abs
,mb18.alesco_payslips_absences_clean com
,mb18.absences_tbl cod
WHERE
com.abs_pay_link is not null and LINK_RULE not in ('R20_N','R30_N','R40_N','R50_N','R55_N') and LV_CODE &lt;> 'SPCPD'
AND abs.emplid = com.emplid
AND abs.job_no = com.job_no
AND abs.company = com.company
AND abs.paygroup = com.paygroup
AND abs.absence_code = com.lv_code
AND abs.start_date = com.start_date
AND abs.abs_pay_link = com.abs_pay_link
AND cod.source = 'ALESCO'
AND cod.absence_code = com.lv_code
AND cod.absence_reason = com.lv_reason
AND abs.start_date BETWEEN cod.effdt_start AND cod.effdt_end
AND abs.absence_id &lt;> cod.absence_id</con:query><con:assertion type="XPath Match" name="Count of rows = 0" id="1e72bfc9-7e51-4a55-9c15-694d5e17cc89"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="1d95e861-838b-438e-bf8a-564350904976" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 5 - Start Date and End Date are not null" searchProperties="true" timeout="0"><con:description>zero rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="1e2b4b9d-15d8-413a-9703-8e61730e54ae"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT count(*) FROM mb18.emp_absences_al WHERE (start_date IS NULL OR end_date IS NULL)</con:query><con:assertion type="XPath Match" name="Count of rows = 0" id="2bd23dcd-a5b4-40ad-8c56-1ba6b8c76b10"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="7be8a5d7-9f2d-42ea-8e08-79176bde4811" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 6 - Start Date always before End Date" searchProperties="true" timeout="0"><con:description>no rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="20635714-161c-4c20-aed9-4b55b5def443"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT count(*) FROM mb18.emp_absences_al WHERE start_date > end_date</con:query><con:assertion type="XPath Match" name="Count of rows = 0" id="dab6bff0-504b-43b6-93b5-069d5500e396"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9e922dad-239b-48b5-ab36-493819a66a12" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 7 - duration_days_per_ppe and duration_hours_per_ppe are not null" searchProperties="true" timeout="0"><con:description>No rows = Pass;</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="37bd19f5-5c01-46f5-8bb0-b3c24038f28e"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT count(*) FROM mb18.emp_absences_al WHERE duration_days_per_ppe IS NULL
UNION ALL
SELECT count(*) FROM mb18.emp_absences_al WHERE duration_hours_per_ppe IS NULL</con:query><con:assertion type="XPath Match" name="Count of rows = 0" id="dae6afe2-1a11-48e1-8240-432e6402a1f8"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="ed89dab8-84bc-473a-9926-46e600635998" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="TEST8 - use_4_or_52 is always 52" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="ceb282c4-9b0a-454c-a79a-c208c5e39e0c"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT count(*) FROM mb18.emp_absences_al WHERE use_4_or_52 &lt;> 52</con:query><con:assertion type="XPath Match" name="Count of rows = 0" id="11ba0c5a-7f62-43c4-8115-7ddc222fc845"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="05378375-7944-439e-8a4d-feea108f70fd" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="TEST 9 - Exclusions from ALESCO_PAYSLIPS_ABSENCES_CLEAN" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>No rows = Pass;</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="df9c914b-0192-48a3-af9c-c20a706dc834"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT count(*) FROM mb18.emp_absences_al WHERE abs_pay_link IS NULL 
UNION ALL
SELECT count(*) FROM mb18.emp_absences_al WHERE abs_pay_link IN (SELECT distinct abs_pay_link FROM mb18.alesco_payslips_absences_clean WHERE link_rule IN ('R20_N','R30_N','R40_N','R50_N','R55_N'))
UNION ALL
SELECT count(*) FROM mb18.emp_absences_al WHERE absence_code = 'SPDPD'</con:query><con:assertion type="XPath Match" name="Count of rows = 0" id="ec0561b8-4639-4f53-88fa-6d01766ad1e3"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="b7ca5bdd-af0e-4bec-a225-ebe48ec51876" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 10 - Difference in units" searchProperties="true" timeout="0"><con:description>Difference in units (duration_days, duration_hours) between ALESCO_PAYSLIPS_ABSENCES_CLEAN and EMP_ABSENCES_AL. No rows = Pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="85d278ef-0d78-42e7-baa5-cdb4c285500b"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT 
* 
FROM
(SELECT
emplid
,job_no
,company
,paygroup
,lv_code
,start_date
,sum(duration_days) days1
,sum(duration_hours) hours1
FROM
mb18.alesco_payslips_absences_clean
WHERE
abs_pay_link IS NOT NULL AND link_rule NOT IN ('R20_N','R30_N','R40_N','R50_N','R55_N') AND lv_code &lt;> 'SPCPD'
GROUP BY emplid,job_no,company,paygroup,lv_code,start_date) a
,(SELECT
emplid
,job_no
,company
,paygroup
,absence_code
,start_date
,sum(duration_days) days2
,sum(duration_hours) hours2
FROM
mb18.emp_absences_al
GROUP BY emplid,job_no,company,paygroup,absence_code,start_date) b
WHERE
a.emplid = b.emplid (+)
AND a.job_no = b.job_no (+)
AND a.company = b.company (+)
AND a.paygroup = b.paygroup (+)
AND a.lv_code = b.absence_code (+)
AND a.start_date = b.start_date (+)
AND (abs(days1 - nvl(days2,0)) > 0.1 OR abs(hours1 - nvl(hours2,0)) > 0.1)</con:query><con:assertion type="XPath Match" name="Count of rows = 0" id="afb0ab98-a535-432c-8a54-9331e88c80a7"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="2d032d22-2a65-4a91-8704-f121a4b6238c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 11 - REVERSED_YN calculation" searchProperties="true" timeout="0"><con:description> No rows = Pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="663c4e81-9c5c-4233-9213-32399d7465c7"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT count(*) FROM mb18.emp_absences_al WHERE reversed_yn NOT IN ('Y','N')
UNION ALL
SELECT
count(*)
FROM
mb18.emp_absences_al abs
,mb18.alesco_payslips_absences_clean com
WHERE
com.abs_pay_link is not null and LINK_RULE not in ('R20_N','R30_N','R40_N','R50_N','R55_N') and LV_CODE &lt;> 'SPCPD'
AND abs.emplid = com.emplid
AND abs.job_no = com.job_no
AND abs.company = com.company
AND abs.paygroup = com.paygroup
AND abs.absence_code = com.lv_code
AND abs.start_date = com.start_date
AND abs.abs_pay_link = com.abs_pay_link
AND ((com.reversal_date IS NOT NULL AND reversed_yn = 'N') OR (com.reversal_date IS NULL AND reversed_yn = 'Y')) </con:query><con:assertion type="XPath Match" name="Count of rows = 0" id="cd1faf8e-f273-4231-b5f9-40b3ef8e2136"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="4fb375b1-c7c0-400b-93fb-af77a0d4d36b" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 12 payslips without absences" searchProperties="true" timeout="0"><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="67b26724-1300-4952-a583-6675bd9ae8af"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select abs_pay_link from mb18.alesco_payslips_absences_clean where abs_pay_link is not null and lv_code&lt;>'SPCPD'
minus
select abs_pay_link from mb18.emp_absences_al</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="0641e79c-b5c0-43e3-a2ca-9bdb3de388a5"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5b8261a1-6ad0-4436-809d-5f0c3cc4225c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 13 supplemental part day absences" searchProperties="true" timeout="0"><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="5c52d9f2-2eb7-4aa9-960f-84018c07c1a6"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select a.emplid, a.start_date, a.duration_days, a.duration_hours , b.rostered_net_hours, round(duration_hours/rostered_net_hours,2) expected_duration_days
from mb18.alesco_payslips_absences_cl_3 a
,(select * from mb18.timesheets_al where rostered_net_hours&lt;>0) b
where a.lv_unit='H' and a.start_date=a.end_date and a.booking_id is not null
and a.emplid=b.emplid and a.start_date=b.start_date
and round(duration_hours/rostered_net_hours,1) &lt;> duration_days</con:query><con:assertion type="XPath Match" name="Count of rows = 0" id="d85ee48f-0722-40b0-a43e-e113ad46c78b"><con:configuration><path>//Results[1]/ResultSet[1]/Row[1]/COUNT[1]/text()</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="299d07a7-6a94-4729-be9a-92fae0d9262c" name="4030-98_MASTER_Employment_History"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="5781d5cf-5117-4767-a297-02a4e98ed917" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Test 1 Checking that keys in occupancy_clean have reached emp_hist_pre_stg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>no rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="3106f1c6-b239-46ee-a588-db8bc653cece"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT emplid, effdt_start, effdt_end   FROM (SELECT *           FROM mb18.alesco_occupancy_clean) MINUS SELECT emplid, effdt_start, effdt_end   FROM (SELECT *           FROM mb18.employment_history_pre_stg          WHERE SOURCE = 'ALESCO')</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="4535b577-238d-45f4-b03c-7751781eeafb" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 2-check that no new rows appear in pre staging" searchProperties="true" timeout="0"><con:description>No rows = Pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="e6d3325d-43e2-4325-b5aa-bbe1ad5a7298"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT emplid, effdt_start
  FROM (SELECT *
          FROM mb18.employment_history_pre_stg
         WHERE SOURCE = 'ALESCO')
MINUS
SELECT emplid, effdt_start
  FROM (SELECT *
          FROM mb18.alesco_occupancy_clean)</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="11fe5945-b6ba-4bdc-9433-a8678e1a5f3c"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="819eb274-4a18-41a1-9499-2ef76d2ee78c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 3-Check that std_days_per_week is populated for all rows" searchProperties="true" timeout="0"><con:description>no rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="24b9ba7d-e26b-4d6f-af9b-511ac4680bd0"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT * FROM mb18.employment_history_pre_stg
   WHERE SOURCE = 'ALESCO' AND std_days_per_week IS NULL
ORDER BY emplid, job_no, effdt_start</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="7b629468-dc72-4053-b27f-a669caac7a24"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="f664afff-015f-435c-a3d5-f17745d4d53b" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Test 4-Checking that keys in emp_hist_pre_stg have reached emp_hist_stg" searchProperties="true" timeout="0"><con:description>Cannot use end_date as new rows have been added eg for overtime, (no rows = pass);</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="01b5bb6c-4c43-4b1b-afac-992115a0a7a5"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT emplid, effdt_start
  FROM (SELECT *
          FROM mb18.employment_history_pre_stg
         WHERE SOURCE = 'ALESCO')
MINUS
SELECT emplid, effdt_start
  FROM (SELECT *
          FROM mb18.employment_history_stg
         WHERE SOURCE = 'ALESCO')</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="a0f3be58-7023-474e-a0ec-c7e46a3d9664"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="925492fb-49da-4d50-ba22-9a79f949dfc0" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 5-Check that all payslip period end dates are between effdt and extended effdt" searchProperties="true" timeout="0"><con:description>zero rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="77f79578-8935-4eed-90ff-e95012018139"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT DISTINCT a.emplid, period_end_date
           FROM mb18.payslips_al a,
                (SELECT *
                   FROM mb18.employment_history_stg) b
          WHERE a.emplid = b.emplid
            AND a.period_end_date BETWEEN NVL (b.effdt_start, '01-jan-1900')
                                      AND NVL (b.extended_effdt_end,
                                               '01-jan-1900'
                                              )
            AND b.emplid IS NULL</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="cd3a917b-a148-4a22-88dc-5f191e5e614b"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="cfc77a57-ab14-4398-b964-596e489dd439" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 6-Check that all timesheets end dates are between effdt and extended effdt" searchProperties="true" timeout="0"><con:description>no rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="b375eb4f-5b9a-442f-a1af-4810cf655d20"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT DISTINCT a.emplid, workdate
           FROM mb18.timesheets_al a,
                (SELECT *
                   FROM mb18.employment_history_stg) b
          WHERE a.emplid = b.emplid
            AND a.workdate BETWEEN NVL (b.effdt_start, '01-jan-1900')
                               AND NVL (b.extended_effdt_end, '01-jan-1900')
            AND b.emplid IS NULL</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="af3a4468-fd96-4d9a-861f-e26f0910ce43"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9d227256-af6f-47d8-a861-16efd1ba1ec1" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 7-Overlaps in pre_staging" searchProperties="true" timeout="0"><con:description>No rows = Pass;</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="4016e051-3317-4f3b-a62a-21c618df2b7d"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT   a.emplid, a.job_no, a.effdt_start, a.effdt_end, a.company,
         a.paygroup, b.effdt_start, b.effdt_end, b.company, b.paygroup,
         CASE
            WHEN a.emplid = '227196'
               THEN 'Known'
            ELSE NULL
         END notes
    FROM mb18.employment_history_pre_stg a, mb18.employment_history_pre_stg b
   WHERE a.emplid = b.emplid
     AND a.job_no = b.job_no
     AND a.SOURCE = 'ALESCO'
     AND a.effdt_start BETWEEN b.effdt_start AND b.effdt_end
     AND a.effdt_start &lt;> b.effdt_start
ORDER BY a.emplid, a.effdt_start</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="46af8361-873e-43af-850c-a8c787db1fa6"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="acb90fba-270e-4d7c-9b81-0477a4c7214b" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="TEST 8-Overlaps in staging" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>no rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="0143b3d8-19c5-4904-adcd-75cb6891dab2"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT   a.emplid, a.job_no, a.effdt_start, a.effdt_end, a.company,
         a.paygroup, b.effdt_start, b.effdt_end, b.company, b.paygroup,
         CASE
            WHEN a.emplid = '227196'
               THEN 'Known'
            ELSE NULL
         END notes
    FROM mb18.employment_history_stg a, mb18.employment_history_stg b
   WHERE a.emplid = b.emplid
     AND a.job_no = b.job_no
     AND a.SOURCE = 'ALESCO'
     AND a.effdt_start BETWEEN b.effdt_start AND b.effdt_end
     AND a.effdt_start &lt;> b.effdt_start
ORDER BY a.emplid, a.effdt_start</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="39bd2e00-fd39-453e-a780-1c6f2dd246e4"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9908c6cd-4bab-44f7-a22a-a69922d1bcfd" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="TEST 9-staging check that all employees have an 'A' record" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>No rows = Pass;</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query 1" id="fe5cc999-7620-47aa-a12b-30ad8cc61fd3"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT DISTINCT emplid, period_of_employment, SOURCE
           FROM mb18.employment_history_stg eh
          WHERE 1 = 1
            AND emplid IN (
                   WITH all_emps AS
                        (SELECT DISTINCT emplid, SOURCE
                                    FROM mb18.employment_history_stg eh
                                   WHERE eh.SOURCE IN ('PSOFT', 'ALESCO')),
                        poe_a AS
                        (SELECT DISTINCT emplid, SOURCE
                                    FROM mb18.employment_history_stg eh
                                   WHERE 1 = 1
                                     AND eh.period_of_employment LIKE 'A%')
                   SELECT t1.emplid
                     FROM all_emps t1 LEFT OUTER JOIN poe_a t2
                          ON t1.emplid = t2.emplid
                    WHERE t2.emplid IS NULL)
            AND emplid NOT IN
                      ('0810725', '0825398', '1003174')</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="7dceb055-e012-417f-a007-75bdb3f631ab"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="49d13c32-e190-457d-89a6-aa2fcf10684c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 10-Staging check that all casual employees have a %1 period of employment" searchProperties="true" timeout="0"><con:description>No rows = Pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="b9126ce4-2722-4f80-8569-b3029dfc68d7"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT * FROM mb18.employment_history_stg eh
   WHERE SOURCE = 'ALESCO'
     AND eh.casual_ind = 'Y'
     AND period_of_employment LIKE '%0'
ORDER BY emplid</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="45069da4-34b5-447a-ad34-bb1f9b7f02ff"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="5a52307f-c094-4426-9b78-02eb5c187764" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 11-staging check that alpha changes are legitimate" searchProperties="true" timeout="0"><con:description>some have notes, blanks will appear at the top so if the first row has a note then they are all fine</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="d871c3a7-3746-49b9-bc77-26ded070bbb6"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>WITH alpha_brks AS
     (SELECT   emplid, SUBSTR (period_of_employment, 1, 1) poe,
               MAX (eh.effdt_end) enddt, MIN (eh.effdt_start) startdt,
               eh.split_reason
          FROM mb18.employment_history_stg eh
         WHERE SOURCE = 'ALESCO'
      GROUP BY emplid, SUBSTR (period_of_employment, 1, 1), split_reason
      ORDER BY 1, 2, 3)
SELECT   emplid, poe, nxt_poe, enddt, nxt_startdt, diff, split_reason,
         CASE
            WHEN emplid = '0808215'
               THEN 'OK - redundancy'
            WHEN emplid = '0834721'
               THEN 'OK - redundancy'
            WHEN emplid = '783542'
               THEN 'OK - redundancy'
            WHEN emplid = '762951'
               THEN 'OK - redundancy'
            WHEN emplid = '303751'
               THEN 'OK - redundancy'
            WHEN emplid = '105250'
               THEN 'OK - redundancy'
            WHEN emplid = '785810'
               THEN 'OK - redundancy'
            WHEN emplid = '0825684'
               THEN 'OK - redundancy'
            WHEN emplid = '0809724'
               THEN 'OK - redundancy'
            WHEN emplid = '0828319'
               THEN 'OK - redundancy'
            WHEN emplid = '0831096'
               THEN 'OK - rehire gap 43 days'
            WHEN emplid = '0831310'
               THEN 'OK - rehire gap 46 days'
            WHEN emplid = '0831435'
               THEN 'OK - redundancy'
            WHEN emplid = '0834123'
               THEN 'OK - rehire gap 95 days'
            WHEN emplid = '0834513'
               THEN 'OK - rehire gap 41 days'
            WHEN emplid = '0835745'
               THEN 'OK - rehire gap 15 days'
            WHEN emplid = '1000371'
               THEN 'OK - rehire gap 21 days'
            WHEN emplid = '1002676'
               THEN 'OK - rehire gap 14 days'
            WHEN emplid = '1003157'
               THEN 'OK - rehire gap 43 days'
            WHEN emplid = '1003962'
               THEN 'OK - rehire gap 14 days'
            WHEN emplid = '1004581'
               THEN 'OK - rehire gap 22 days'
            WHEN emplid = '1004595'
               THEN 'OK - rehire gap 14 days'
            WHEN emplid = '1004596'
               THEN 'OK - rehire gap 14 days'
            WHEN emplid = '1004601'
               THEN 'OK - rehire gap 14 days'
            WHEN emplid = '1004624'
               THEN 'OK - rehire gap 14 days'
            WHEN emplid = '1004682'
               THEN 'OK - rehire gap 14 days'
            WHEN emplid = '207417'
               THEN 'OK - redundancy'
            ELSE NULL
         END notes
    FROM (SELECT emplid, poe, LEAD (poe) OVER (ORDER BY emplid, poe) nxt_poe,
                 LEAD (emplid) OVER (ORDER BY emplid, poe) nxt_emplid, enddt,
                 LEAD (startdt) OVER (ORDER BY emplid, poe) nxt_startdt,
                 LEAD (startdt) OVER (ORDER BY emplid, poe) - enddt diff,
                 LEAD (split_reason) OVER (ORDER BY emplid, poe) split_reason
            FROM alpha_brks)
   WHERE emplid = nxt_emplid
     AND poe &lt;> nxt_poe
     AND diff &lt; 8
     AND split_reason NOT LIKE '%AL PAYOUT EXISTS%'
ORDER BY notes DESC</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="d7720d60-5899-4b27-ba25-2fa7f7a6aee3"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="968caaa6-b7bf-4aaf-a4a4-803d86b4f58f" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 12-staging check that numeric changes are due to OT or to/from casual" searchProperties="true" timeout="0"><con:description>no rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="6972b41d-5334-4b81-9e48-6810140dbb01"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>WITH alpha_brks AS
     (SELECT   emplid, SUBSTR (period_of_employment, 1, 2) poe,
               MAX (eh.effdt_end) enddt, MIN (eh.effdt_start) startdt,
               eh.split_reason, eh.casual_ind, action
          FROM mb18.employment_history_stg eh
         WHERE SOURCE = 'ALESCO'
      GROUP BY emplid,
               SUBSTR (period_of_employment, 1, 2),
               split_reason,
               casual_ind,
               action
      ORDER BY 1, 2, 3)
SELECT emplid, poe, nxt_poe, enddt, nxt_startdt, casual_ind, nxt_casual_ind,
       action, nxt_action, split_reason, nxt_split_reason
  FROM (SELECT emplid, poe, LEAD (poe) OVER (ORDER BY emplid, poe) nxt_poe,
               LEAD (emplid) OVER (ORDER BY emplid, poe) nxt_emplid, enddt,
               LEAD (startdt) OVER (ORDER BY emplid, poe) nxt_startdt,
               LEAD (startdt) OVER (ORDER BY emplid, poe) - enddt diff,
               casual_ind,
               LEAD (casual_ind) OVER (ORDER BY emplid, poe) nxt_casual_ind,
               split_reason,
               LEAD (split_reason) OVER (ORDER BY emplid,
                poe) nxt_split_reason, action,
               LEAD (action) OVER (ORDER BY emplid, poe) nxt_action
          FROM alpha_brks)
 WHERE emplid = nxt_emplid
   AND poe &lt;> nxt_poe
   and emplid not in ('0834345', '0828715')
   AND SUBSTR (nxt_poe, 2, 1) = '1'
   AND SUBSTR (poe, 2, 1) = '1'
   AND nxt_split_reason NOT LIKE '%OT EXISTS%'
   AND casual_ind &lt;> 'Y'
   AND nxt_casual_ind &lt;> 'Y'</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="72c8823a-8afa-4334-bd8c-a80fc7fd09c4"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="9b2abf67-b755-4f53-a7f5-75179d41d814" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 13-make sure there are no null extended end dates" searchProperties="true" timeout="0"><con:description>no rows = pass</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="ee15bdeb-34ad-46a0-8e93-66a1d81bfd90"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT *
  FROM mb18.employment_history_stg
 WHERE extended_effdt_end IS NULL</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="d89a720f-9c22-4979-a5f2-7585ccf4302f"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="494db54c-5d3c-4019-ab85-8f3ed56e8336" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="TEST 14-make sure there are no extended end dates prior to effective start date" searchProperties="true" timeout="0"><con:description>where effective end date is after effective start date</con:description><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="Database Query" id="24cf6f9a-cf22-48e7-8e10-e5b466293e24"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>SELECT *
  FROM mb18.employment_history_stg
 WHERE effdt_start &lt; effdt_end AND extended_effdt_end &lt; effdt_start</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="66a39092-6d26-4b20-80a7-63ff72a22976"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="1036e25e-0124-40b1-a943-2bbfd8e93d70" name="4030-99-ALESCO row counts for PAN form PANCAKE"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="724fcb06-6ee6-4aaa-852e-2fe27e469d02" discardOkResults="true" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="4030-99 Tests" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description/><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="PERSON" id="c3195c5a-def5-4e97-9cb5-df577ab466a9"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select expected_result, count(*) from (
select
case 
when b.emplid is null then 'New Row' -- emp in pre-pan is not in pan it's a new row 
when b.emplid is not null and a.EMPLID=b.EMPLID -- emplid exists in both, check if data the same to see if it's changed or not. 
    
and nvl(a.SURNAME,'xyz') = nvl (b.SURNAME,'xyz') 
and nvl(a.FIRST_NAMES,'xyz') = nvl (b.FIRST_NAMES,'xyz') 
and nvl(a.PREFERRED_NAME,'xyz') = nvl (b.PREFERRED_NAME,'xyz') 
and nvl(a.DATE_OF_BIRTH,'16-sep-1868') = nvl (b.DATE_OF_BIRTH,'16-sep-1868') 
and nvl(a.MOBILE_PHONE,'xyz') = nvl (b.MOBILE_PHONE,'xyz') 
and nvl(a.GENDER,'xyz') = nvl (b.GENDER,'xyz') 
and nvl(a.TITLE,'xyz') = nvl (b.TITLE,'xyz') 
and nvl(a.IRD_NUMBER,'xyz') = nvl (b.IRD_NUMBER,'xyz') 
and nvl(a.HIRE_DATE,'16-sep-1868') = nvl (b.HIRE_DATE,'16-sep-1868') 
and nvl(a.TERMINATION_DATE,'16-sep-1868') = nvl (b.TERMINATION_DATE,'16-sep-1868') 
and nvl(a.TERMINATION_REASON_DESC,'xyz') = nvl (b.TERMINATION_REASON_DESC,'xyz') 

and  case when a.TERMINATION_REASON_DESC='Death' then 'x' else nvl(a.BANK_ACCOUNT,'x') end = case when b.TERMINATION_REASON_DESC='Death' then 'x' else nvl(b.BANK_ACCOUNT,'x') end

and nvl(a.BANK_ACCOUNT_NAME,'xyz') = nvl (b.BANK_ACCOUNT_NAME,'xyz') 
and nvl(a.PERSONAL_EMAIL,'xyz') = nvl (b.PERSONAL_EMAIL,'xyz') 
and nvl(a.SUBTRACT_OVERPAYMENT,'xyz') = nvl (b.SUBTRACT_OVERPAYMENT,'xyz') 
and nvl(a.STATUS_LATEST,'xyz') = nvl (b.STATUS_LATEST,'xyz') 
and nvl(a.STATUS_UPDATED_ON,'16-sep-1868') = nvl (b.STATUS_UPDATED_ON,'16-sep-1868') 
and nvl(a.HOME_PHONE,'xyz') = nvl (b.HOME_PHONE,'xyz') 
and nvl(a.OTHER_PHONE,'xyz') = nvl (b.OTHER_PHONE,'xyz') 
and nvl(a.PERSON_NOTES,'xyz') = nvl (b.PERSON_NOTES,'xyz') 
and nvl(a.INCLUDE_CLAIMANT,'xyz') = nvl (b.INCLUDE_CLAIMANT,'xyz') 
and nvl(a.EMP_REFERENCE,'xyz') = nvl (b.EMP_REFERENCE,'xyz') 
     
    then 'Unchanged'
else 'Changed'        
end expected_result

,a.*, b.*

from 
(select * from mb18.person_al         ) a
, (select * from mb18.person )b
,(select emplid, max (nvl (termination_date,to_date('31-dec-2049','dd-mon-yyyy'))) termination_date, count(*) counter from   mb18.person_al a group by emplid) c
where a.emplid=b.emplid(+)
and a.emplid=c.emplid 
and nvl (a.termination_date,to_date('31-dec-2049','dd-mon-yyyy'))=c.termination_date

and case when b.emplid is null or a.emplid=a.orig_emplid or c.counter=1 then 'in' else 'out' end = 'in' --special case for preson table as not all rows go from pre-pan to pan 
--and a.emplid='0801249'
) group by expected_result</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="ADDR_ORIG" id="725ea22f-57db-4e2b-982c-f13ee9567e1f"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select expected_result, count(*) from 
(
select
case 
when b.emplid is null then 'New Row' -- emp in pre-pan is not in pan it's a new row 
when b.emplid is not null and a.EMPLID=b.EMPLID -- emplid exists in both, check if data the same to see if it's changed or not. 
    
and nvl(a.HOME_ADDRESS1,'xyz') = nvl (b.HOME_ADDRESS1,'xyz') 
and nvl(a.HOME_ADDRESS2,'xyz') = nvl (b.HOME_ADDRESS2,'xyz') 
and nvl(a.HOME_ADDRESS3,'xyz') = nvl (b.HOME_ADDRESS3,'xyz') 
and nvl(a.HOME_ADDRESS4,'xyz') = nvl (b.HOME_ADDRESS4,'xyz') 
and nvl(a.HOME_POSTCODE,'xyz') = nvl (b.HOME_POSTCODE,'xyz') 
and nvl(a.MAIL_ADDRESS1,'xyz') = nvl (b.MAIL_ADDRESS1,'xyz') 
and nvl(a.MAIL_ADDRESS2,'xyz') = nvl (b.MAIL_ADDRESS2,'xyz') 
and nvl(a.MAIL_ADDRESS3,'xyz') = nvl (b.MAIL_ADDRESS3,'xyz') 
and nvl(a.MAIL_ADDRESS4,'xyz') = nvl (b.MAIL_ADDRESS4,'xyz') 
and nvl(a.MAIL_POSTCODE,'xyz') = nvl (b.MAIL_POSTCODE,'xyz') 

     
    then 'Unchanged'
else 'Changed'        
end expected_result

,a.*, b.*
from 
(select * from mb18.PERSON_ADDRESS_ORIG_al) a
, mb18.PERSON_ADDRESS_ORIG b
,mb18.person_al c

where a.emplid=b.emplid(+)

and a.emplid=c.emplid(+)

and case when b.emplid is null or a.emplid=a.emplid then 'in' else 'out' end = 'in' --special case for preson table as not all rows go from pre-pan to pan 
--and a.emplid='P103278'

)
group by expected_result</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="ABSENCES" id="406553bf-832b-4d77-a563-c8432218b5bc"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select expected_result, count(*) from
(
select

case 
when b.EMPLID is null then 'New Row' -- keys not in pancake 
when b.edited_date_time is not null then 'Unchanged due to edit'

when b.EMPLID is not null 
and a.EMPLID=b.EMPLID 
and a.job_no=b.job_no 
and a.sequence =b.sequence 
and a.start_date=b.start_date 
and a.end_date=b.end_date 
and a.ABSENCE_CODE=b.ABSENCE_CODE
and a.expected_pay_end_date=b.expected_pay_end_Date 

    
and nvl(a.EMPLID,'xyz') = nvl (b.EMPLID,'xyz') 
and nvl(a.JOB_NO,'xyz') = nvl (b.JOB_NO,'xyz') 
and nvl(a.SEQUENCE,-999) = nvl (b.SEQUENCE,-999) 
and nvl(a.ABSENCE_CODE,'xyz') = nvl (b.ABSENCE_CODE,'xyz') 
and nvl(a.ABSENCE_ID,-999) = nvl (b.ABSENCE_ID,-999) 
and nvl(a.START_DATE,'16-sep-1868') = nvl (b.START_DATE,'16-sep-1868') 
and nvl(a.END_DATE,'16-sep-1868') = nvl (b.END_DATE,'16-sep-1868') 
and nvl(a.DURATION_DAYS,-999) = nvl (b.DURATION_DAYS,-999) 
and nvl(a.DURATION_HOURS,-999) = nvl (b.DURATION_HOURS,-999) 
and nvl(a.REVERSED_YN,'xyz') = nvl (b.REVERSED_YN,'xyz') 
--and nvl(a.PAYSLIP_LINK,'xyz') = nvl (b.PAYSLIP_LINK,'xyz') 
and nvl(a.EXPECTED_PAY_START_DATE,'16-sep-1868') = nvl (b.EXPECTED_PAY_START_DATE,'16-sep-1868') 
and nvl(a.EXPECTED_PAY_END_DATE,'16-sep-1868') = nvl (b.EXPECTED_PAY_END_DATE,'16-sep-1868') 
and nvl(a.DURATION_DAYS_PER_PPE,-999) = nvl (b.DURATION_DAYS_PER_PPE,-999) 
and nvl(a.DURATION_HOURS_PER_PPE,-999) = nvl (b.DURATION_HOURS_PER_PPE,-999) 
and nvl(a.USE_4_OR_52,-999) = nvl (b.USE_4_OR_52,-999) 
--and nvl(a.PAYSLIP_ID,-999) = nvl (b.PAYSLIP_ID,-999) -- commented out 3 Feb SW 

     
    then 'Unchanged'
else 'Changed'        
end expected_result

,a.*, b.*
from 
(select * from mb18.EMP_ABSENCES_al) a
, (select * from mb18.EMP_ABSENCES) b

where 
a.EMPLID=b.EMPLID(+) 
and a.job_no=b.job_no(+) 
and a.sequence =b.sequence(+) 
and a.start_date=b.start_date(+)
and a.end_date=b.end_date(+)
and a.ABSENCE_CODE=b.ABSENCE_CODE(+)
and a.expected_pay_end_date=b.expected_pay_end_Date(+) 
)

group by expected_result</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="e3642c4d-f392-4aef-8bc4-1cbd9c94d309"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="TIMESHEETS" id="e18e5379-683c-4c7f-b590-5ca622b56f27"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select expected_result, count(*) from 

(
select
case 
when b.EMPLID is null then 'New Row' -- keys not in pancake 
when b.edited_date_time is not null then 'Unchanged due to edit'
when b.EMPLID is not null and a.EMPLID=b.EMPLID and a.workdate =b.workdate and a.work_type=b.work_type --and a.start_date=b.end_date and a.end_date=b.end_date
    
and nvl(a.EMPLID,'xyz') = nvl (b.EMPLID,'xyz') 
and nvl(a.WORKDATE,'16-sep-1868') = nvl (b.WORKDATE,'16-sep-1868') 
--and nvl(a.START_DATE,'16-sep-1868') = nvl (b.START_DATE,'16-sep-1868') 
--and nvl(a.END_DATE,'16-sep-1868') = nvl (b.END_DATE,'16-sep-1868') 
--and nvl(a.PERIOD_IND,'xyz') = nvl (b.PERIOD_IND,'xyz') 
--and nvl(a.START_DATE_TIME_ACTUAL,'16-sep-1868') = nvl (b.START_DATE_TIME_ACTUAL,'16-sep-1868') 
--and nvl(a.END_DATE_TIME_ACTUAL,'16-sep-1868') = nvl (b.END_DATE_TIME_ACTUAL,'16-sep-1868') 
and nvl(a.WORK_TYPE,'xyz') = nvl (b.WORK_TYPE,'xyz') 
--and nvl(a.ROSTER_CODE,'xyz') = nvl (b.ROSTER_CODE,'xyz') 
--and nvl(a.START_DATE_TIME_ROSTER,'16-sep-1868') = nvl (b.START_DATE_TIME_ROSTER,'16-sep-1868') 
--and nvl(a.END_DATE_TIME_ROSTER,'16-sep-1868') = nvl (b.END_DATE_TIME_ROSTER,'16-sep-1868') 
and nvl(a.ROSTERED_NET_HOURS,-999) = nvl (b.ROSTERED_NET_HOURS,-999) 
and nvl(a.ACTUAL_NET_HOURS,-999) = nvl (b.ACTUAL_NET_HOURS,-999) 
and nvl(a.DAYS_PAID,-999) = nvl (b.DAYS_PAID,-999) 
     
    then 'Unchanged'
else 'Changed'        
end expected_result

,a.*, b.*
from 
(select * from mb18.timesheets_al) a
, mb18.timesheets b

where 
a.EMPLID=b.EMPLID(+) and a.workdate =b.workdate(+) and a.work_type=b.work_type(+) --and a.start_date=b.end_date(+) and a.end_date=b.end_date(+)


)

group by expected_result</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="EMPHIST" id="126ea0bb-e457-45b0-ad88-24dbe0b708a2"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName>EDWDVP_MB18</con:dbConnectionName><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:MB18_READONLY/PASS_VALUE@DB_DVP_EDW.NZPOST.CO.NZ:1781:EDWDVP</con:connectionString><con:password>r2SL24#1kV5S</con:password><con:connectionProperties/><con:query>select expected_result, count(*) from 
(
select
case 
when b.emplid is null then 'New Row' -- emp in pre-pan is not in pan it's a new row
when b.edited_date_time is not null then 'Unchanged due to edit' 
when b.emplid is not null and a.EMPLID=b.EMPLID and a.EFFDT_START=b.EFFDT_START and a.JOB_NO=b.JOB_NO and a.COMPANY=b.COMPANY and a.PAYGROUP=b.PAYGROUP and a.EFFSEQ=b.EFFSEQ
    
and nvl(a.EFFDT_START,'16-sep-1868') = nvl (b.EFFDT_START,'16-sep-1868') 
and nvl(a.EFFDT_END,'16-sep-1868') = nvl (b.EFFDT_END,'16-sep-1868') 
and nvl(a.EXTENDED_EFFDT_END,'16-sep-1868') = nvl (b.EXTENDED_EFFDT_END,'16-sep-1868') 
and nvl(a.EFFSEQ,-999) = nvl (b.EFFSEQ,-999) 
and nvl(a.JOB_NO,'xyz') = nvl (b.JOB_NO,'xyz') 
and nvl(a.ACTION,'xyz') = nvl (b.ACTION,'xyz') 
and nvl(a.COMPANY,'xyz') = nvl (b.COMPANY,'xyz') 
and nvl(a.PAYGROUP,'xyz') = nvl (b.PAYGROUP,'xyz') 
and nvl(a.FTE,-999) = nvl (b.FTE,-999) 
and nvl(a.STD_HOURS,-999) = nvl (b.STD_HOURS,-999) 
and nvl(a.RATE_HOUR,-999) = nvl (b.RATE_HOUR,-999) 
and nvl(a.RATE_YEAR,-999) = nvl (b.RATE_YEAR,-999) 
and nvl(a.STD_DAYS_PER_WEEK,-999) = nvl (b.STD_DAYS_PER_WEEK,-999) 
and nvl(a.PERIOD_OF_EMPLOYMENT,'xyz') = nvl (b.PERIOD_OF_EMPLOYMENT,'xyz') 
and nvl(a.ROSTER_CODE,'xyz') = nvl (b.ROSTER_CODE,'xyz') 
and nvl(a.PERM_TEMP_CAS_STATUS,'xyz') = nvl (b.PERM_TEMP_CAS_STATUS,'xyz') 
and nvl(a.SPLIT_REASON,'xyz') = nvl (b.SPLIT_REASON,'xyz') 
--and nvl(a.DW_INSERT_AUDIT_ID,-999) = nvl (b.DW_INSERT_AUDIT_ID,-999) 
--and nvl(a.DW_UPDATE_AUDIT_ID,-999) = nvl (b.DW_UPDATE_AUDIT_ID,-999) 
--and nvl(a.DW_MODIFIED_DATE,'16-sep-1868') = nvl (b.DW_MODIFIED_DATE,'16-sep-1868')
--and nvl(a.RDP_SOURCE,'xyz') = nvl (b.RDP_SOURCE,'xyz') 
and nvl(a.CASUAL_IND,'xyz') = nvl (b.CASUAL_IND,'xyz') 
    then 'Unchanged'
    else 'Changed'        
end expected_result

,a.*, b.*
from 
(select * from mb18.employment_history_stg) a
, (select * from mb18.employment_history) b

where 
a.EMPLID=b.EMPLID(+) and a.EFFDT_START=b.EFFDT_START(+) and a.JOB_NO=b.JOB_NO(+) and a.COMPANY=b.COMPANY(+) and a.PAYGROUP=b.PAYGROUP(+) and a.EFFSEQ=b.EFFSEQ(+)
)
group by expected_result</con:query><con:assertion type="Simple NotContains" name="Fails if the response contains any rows (expected 0 rows)" id="9164184e-a17c-465a-bff2-9fe8d2a05a15"><con:configuration><token>&lt;/Row></token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:properties/></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository/><con:tags/></con:soapui-project>